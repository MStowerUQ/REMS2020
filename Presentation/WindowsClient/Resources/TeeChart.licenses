<Licenses xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><License Id="15688851" startDate="20200604" expireDate="20210603"><Licensee name="The_University_of_Queensland" url="an_url" company="Queensland_Biosciences_Precinct" contactInfo="marc@steema.com" /><Product Id="1049" name="900" url="www.steema.com" copyright="Steema Software SL" /><Assembly name="teechart" /><Assembly name="teeChart.wpf" /><Assembly name="teechart.wpf.xaml" /><Assembly name="teechart.silverlight" /><Assembly name="teechart.phone" /><Assembly name="teechart.uwp" /><Assembly name="teechart.store" /><Assembly name="teechart.netstandard" /><Assembly name="teechart.winform" /></License><Signature><RSAKeys>BgIAAACkAABSU0ExAAgAAAEAAQBvithfUzZ1rCzdVkqZ5ThZcaGf0tDLz7ODxjI90C2j/TF9+vU5OFM1UCCmn6j6wPKC861uPYNn9mK+M61sJ450pDC/JNnHxXOo4FEc2R0OIsKqbm4/PGEzGMIJ6qX0YBwB+kCwTuyUDa9+DNdsSTeg3U/QPtXoSDgB0z3JeULWyaFDsD/iPObvNUSSxEFH3voiJFPFBG5qKYeH4ZbQBw87M5Fcg1ZfSpi8HxAQ+ojKmbSX+Fg/4ka9OTVE9Z75E/r6rHaGo6adjtj/Xn/Zb/JF+XS2ZFPpMqfHWNSkB4w1hZ+EytG7FSpP2lEViPucyfU/qodIrVNUGnQZdRqL10Op</RSAKeys><SignatureValue>Xkle9x1zoNYmzO+JiMAvQQCigf5a7Xd2tQz9puDpuQjJ2IKwmtXRzeASVQ4KTkAlzss1S2sR3vZGxAdvXVi/CjHX/LmbE+jhtuM+lpAVIIzPLgy+MGqdIeJI9O1IrfuZBHYP0BpKvGwkiqTas78kzcD9RTLPDmnjTP9SH7friqY0ILsW1FWdirt59c/sXF1Gdx64tkJ5tMNU1AjpDJs/ZSKhD4u3JFFXB8lcQm4JPX5cP5H62GMjeI0T3K0IRbPTb0Vujx3jft8MLwf2XhoYLt3SR2LwRAZKAxmJdfE1O85pN+0scIAIQbUeH56RZuRu6+bSGVfiF0ecTFlZbjMagw==</SignatureValue></Signature></Licenses>